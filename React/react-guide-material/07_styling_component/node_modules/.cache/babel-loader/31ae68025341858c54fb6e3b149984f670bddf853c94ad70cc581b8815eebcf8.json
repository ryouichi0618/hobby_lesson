{"ast":null,"code":"var _jsxFileName = \"/Users/sekineryouichi/\\u8DA3\\u5473\\u30A2\\u30D5\\u309A\\u30EA/React\\u8DA3\\u5473\\u30A2\\u30D5\\u309A\\u30EA/react-guide-material/07_styling_component/src/050_chakra_ui/end/components/Form.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { HStack, Input, Button, useToast } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = _ref => {\n  _s();\n  let {\n    createTodo\n  } = _ref;\n  const [enteredTodo, setEnteredTodo] = useState(\"\");\n  const toast = useToast();\n  const addTodo = e => {\n    e.preventDefault();\n    if (!enteredTodo) {\n      toast({\n        title: \"新しいタスクを入力してください\",\n        status: \"error\",\n        duration: 2000,\n        isClosable: true\n      });\n      return;\n    }\n    const newTodo = {\n      id: Math.floor(Math.random() * 1e5),\n      content: enteredTodo\n    };\n    createTodo(newTodo);\n    setEnteredTodo(\"\");\n    toast({\n      title: \"新しいタスクを追加しました！\",\n      description: enteredTodo,\n      status: \"info\",\n      duration: 3000,\n      isClosable: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addTodo,\n    children: /*#__PURE__*/_jsxDEV(HStack, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"\\u65B0\\u3057\\u3044\\u30BF\\u30B9\\u30AF\",\n        _placeholder: {\n          opacity: \"0.3\",\n          color: \"gray.500\"\n        },\n        size: \"lg\",\n        p: 3,\n        bgColor: \"white\",\n        variant: \"flushed\",\n        value: enteredTodo,\n        onChange: e => setEnteredTodo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        size: \"md\",\n        bgColor: \"white\",\n        variant: \"outline\",\n        px: 7,\n        type: \"submit\",\n        children: \"\\u8FFD\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"r/bsdWTZpam4gO8vl0VbknnJVmw=\", false, function () {\n  return [useToast];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","HStack","Input","Button","useToast","jsxDEV","_jsxDEV","Form","_ref","_s","createTodo","enteredTodo","setEnteredTodo","toast","addTodo","e","preventDefault","title","status","duration","isClosable","newTodo","id","Math","floor","random","content","description","onSubmit","children","placeholder","_placeholder","opacity","color","size","p","bgColor","variant","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","colorScheme","px","type","_c","$RefreshReg$"],"sources":["/Users/sekineryouichi/趣味アプリ/React趣味アプリ/react-guide-material/07_styling_component/src/050_chakra_ui/end/components/Form.js"],"sourcesContent":["import { useState } from \"react\";\nimport { HStack, Input, Button, useToast } from \"@chakra-ui/react\";\n\nconst Form = ({ createTodo }) => {\n  const [enteredTodo, setEnteredTodo] = useState(\"\");\n\n  const toast = useToast();\n\n  const addTodo = (e) => {\n    e.preventDefault();\n\n    if (!enteredTodo) {\n      toast({\n        title: \"新しいタスクを入力してください\",\n        status: \"error\",\n        duration: 2000,\n        isClosable: true,\n      });\n      return;\n    }\n\n    const newTodo = {\n      id: Math.floor(Math.random() * 1e5),\n      content: enteredTodo,\n    };\n\n    createTodo(newTodo);\n\n    setEnteredTodo(\"\");\n\n    toast({\n      title: \"新しいタスクを追加しました！\",\n      description: enteredTodo,\n      status: \"info\",\n      duration: 3000,\n      isClosable: true,\n    });  \n  };\n\n  return (\n    <form onSubmit={addTodo}>\n      <HStack>\n        {/* POINT ChakraのInputコンポーネントを使う  */}\n        <Input\n          placeholder=\"新しいタスク\"\n          _placeholder={{ opacity: \"0.3\", color: \"gray.500\" }}\n          size=\"lg\"\n          p={3}\n          bgColor=\"white\"\n          variant=\"flushed\"\n          value={enteredTodo}\n          onChange={(e) => setEnteredTodo(e.target.value)}\n        />\n        <Button\n          colorScheme=\"blue\"\n          size=\"md\"\n          bgColor=\"white\"\n          variant=\"outline\"\n          px={7}\n          type=\"submit\"\n        >\n          追加\n        </Button>\n      </HStack>\n    </form>\n  );\n};\n\nexport default Form;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,IAAI,GAAGC,IAAA,IAAoB;EAAAC,EAAA;EAAA,IAAnB;IAAEC;EAAW,CAAC,GAAAF,IAAA;EAC1B,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMa,KAAK,GAAGT,QAAQ,EAAE;EAExB,MAAMU,OAAO,GAAIC,CAAC,IAAK;IACrBA,CAAC,CAACC,cAAc,EAAE;IAElB,IAAI,CAACL,WAAW,EAAE;MAChBE,KAAK,CAAC;QACJI,KAAK,EAAE,iBAAiB;QACxBC,MAAM,EAAE,OAAO;QACfC,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE;MACd,CAAC,CAAC;MACF;IACF;IAEA,MAAMC,OAAO,GAAG;MACdC,EAAE,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC;MACnCC,OAAO,EAAEf;IACX,CAAC;IAEDD,UAAU,CAACW,OAAO,CAAC;IAEnBT,cAAc,CAAC,EAAE,CAAC;IAElBC,KAAK,CAAC;MACJI,KAAK,EAAE,gBAAgB;MACvBU,WAAW,EAAEhB,WAAW;MACxBO,MAAM,EAAE,MAAM;MACdC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE;IACd,CAAC,CAAC;EACJ,CAAC;EAED,oBACEd,OAAA;IAAMsB,QAAQ,EAAEd,OAAQ;IAAAe,QAAA,eACtBvB,OAAA,CAACL,MAAM;MAAA4B,QAAA,gBAELvB,OAAA,CAACJ,KAAK;QACJ4B,WAAW,EAAC,sCAAQ;QACpBC,YAAY,EAAE;UAAEC,OAAO,EAAE,KAAK;UAAEC,KAAK,EAAE;QAAW,CAAE;QACpDC,IAAI,EAAC,IAAI;QACTC,CAAC,EAAE,CAAE;QACLC,OAAO,EAAC,OAAO;QACfC,OAAO,EAAC,SAAS;QACjBC,KAAK,EAAE3B,WAAY;QACnB4B,QAAQ,EAAGxB,CAAC,IAAKH,cAAc,CAACG,CAAC,CAACyB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAChD,eACFtC,OAAA,CAACH,MAAM;QACL0C,WAAW,EAAC,MAAM;QAClBX,IAAI,EAAC,IAAI;QACTE,OAAO,EAAC,OAAO;QACfC,OAAO,EAAC,SAAS;QACjBS,EAAE,EAAE,CAAE;QACNC,IAAI,EAAC,QAAQ;QAAAlB,QAAA,EACd;MAED;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEX,CAAC;AAACnC,EAAA,CA/DIF,IAAI;EAAA,QAGMH,QAAQ;AAAA;AAAA4C,EAAA,GAHlBzC,IAAI;AAiEV,eAAeA,IAAI;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}